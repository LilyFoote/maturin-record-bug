# This file is autogenerated by maturin v1.6.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
              #          - runner: ubuntu-latest
              #            target: x86
              #          - runner: ubuntu-latest
              #            target: aarch64
              #          - runner: ubuntu-latest
              #            target: armv7
              #          - runner: ubuntu-latest
              #            target: s390x
              #          - runner: ubuntu-latest
              #            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Copy assets
        run: cp -r assets project/src/project
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
          working-directory: project
          maturin-version: 1.5.0
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: project/dist

            #  musllinux:
            #    runs-on: ${{ matrix.platform.runner }}
            #    strategy:
            #      matrix:
            #        platform:
            #          - runner: ubuntu-latest
            #            target: x86_64
            #          - runner: ubuntu-latest
            #            target: x86
            #          - runner: ubuntu-latest
            #            target: aarch64
            #          - runner: ubuntu-latest
            #            target: armv7
            #    steps:
            #      - uses: actions/checkout@v4
            #      - uses: actions/setup-python@v5
            #        with:
            #          python-version: 3.x
            #      - name: Copy assets
            #        run: cp -r assets project/src/project
            #      - name: Build wheels
            #        uses: PyO3/maturin-action@v1
            #        with:
            #          target: ${{ matrix.platform.target }}
            #          args: --release --out dist --find-interpreter
            #          sccache: 'true'
            #          manylinux: musllinux_1_2
            #          working-directory: project
            #      - name: Upload wheels
            #        uses: actions/upload-artifact@v4
            #        with:
            #          name: wheels-musllinux-${{ matrix.platform.target }}
            #          path: project/dist
            #
            #  windows:
            #    runs-on: ${{ matrix.platform.runner }}
            #    strategy:
            #      matrix:
            #        platform:
            #          - runner: windows-latest
            #            target: x64
            #          - runner: windows-latest
            #            target: x86
            #    steps:
            #      - uses: actions/checkout@v4
            #      - uses: actions/setup-python@v5
            #        with:
            #          python-version: 3.x
            #          architecture: ${{ matrix.platform.target }}
            #      - name: Copy assets
            #        run: cp -r assets project/src/project
            #      - name: Build wheels
            #        uses: PyO3/maturin-action@v1
            #        with:
            #          target: ${{ matrix.platform.target }}
            #          args: --release --out dist --find-interpreter
            #          sccache: 'true'
            #          working-directory: project
            #      - name: Upload wheels
            #        uses: actions/upload-artifact@v4
            #        with:
            #          name: wheels-windows-${{ matrix.platform.target }}
            #          path: project/dist
            #
            #  macos:
            #    runs-on: ${{ matrix.platform.runner }}
            #    strategy:
            #      matrix:
            #        platform:
            #          - runner: macos-12
            #            target: x86_64
            #          - runner: macos-14
            #            target: aarch64
            #    steps:
            #      - uses: actions/checkout@v4
            #      - uses: actions/setup-python@v5
            #        with:
            #          python-version: 3.x
            #      - name: Copy assets
            #        run: cp -r assets project/src/project
            #      - name: Build wheels
            #        uses: PyO3/maturin-action@v1
            #        with:
            #          target: ${{ matrix.platform.target }}
            #          args: --release --out dist --find-interpreter
            #          sccache: 'true'
            #          working-directory: project
            #      - name: Upload wheels
            #        uses: actions/upload-artifact@v4
            #        with:
            #          name: wheels-macos-${{ matrix.platform.target }}
            #          path: project/dist
            #
            #  sdist:
            #    runs-on: ubuntu-latest
            #    steps:
            #      - uses: actions/checkout@v4
            #      - name: Copy assets
            #        run: cp -r assets project/src/project
            #      - name: Build sdist
            #        uses: PyO3/maturin-action@v1
            #        with:
            #          command: sdist
            #          args: --out dist
            #          working-directory: project
            #      - name: Upload sdist
            #        uses: actions/upload-artifact@v4
            #        with:
            #          name: wheels-sdist
            #          path: project/dist

  check-record:
    name: Check RECORD
    runs-on: ubuntu-latest
    needs: [linux] #, musllinux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - run: unzip wheels-linux-x86_64/project-0.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl -d project-wheel
      - run: cat project-wheel/project-0.1.0.dist-info/RECORD

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux] #, musllinux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
